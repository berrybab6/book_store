version: '3'
services:
  app:
    container_name: movie_app
    build: .
    ports: 
      - 8080:8080 
    restart: on-failure
    volumes:
      - static:/static

      - Movie_Go:/usr/src/app/
    depends_on:
      - movie-postgres          
    networks:
      - movie


  movie-postgres:
    image: postgres:latest
    container_name: movie_db_postgres
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - movie
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - movie-postgres
    ports:
      - "5050:80"
    networks:
      - movie
    restart: unless-stopped

  nginx:
    build: ./nginx
    volumes:
      - static:/static
    ports:
      - "80:80"
    networks:
      - movie
    depends_on:
      - app
  # volumes:
  #   static:
volumes:
  Movie_Go:
  database_postgres:    
  static:        

# Networks to be created to facilitate communication between containers
networks:
  movie:
    driver: bridge